---
apiVersion: v1
kind: Namespace
metadata:
  name: kcp-syncer-kind-10k5pbcv
  labels:
    workload.kcp.io/logical-cluster: root_user
    workload.kcp.io/sync-target: kind
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kcp-syncer-kind-10k5pbcv
  namespace: kcp-syncer-kind-10k5pbcv
---
apiVersion: v1
kind: Secret
metadata:
  name: kcp-syncer-kind-10k5pbcv-token
  namespace: kcp-syncer-kind-10k5pbcv
  annotations:
    kubernetes.io/service-account.name: kcp-syncer-kind-10k5pbcv
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kcp-syncer-kind-10k5pbcv
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - "get"
  - "watch"
  - "list"
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - "*"
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kcp-syncer-kind-10k5pbcv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kcp-syncer-kind-10k5pbcv
subjects:
- kind: ServiceAccount
  name: kcp-syncer-kind-10k5pbcv
  namespace: kcp-syncer-kind-10k5pbcv
---
apiVersion: v1
kind: Secret
metadata:
  name: kcp-syncer-kind-10k5pbcv
  namespace: kcp-syncer-kind-10k5pbcv
stringData:
  kubeconfig: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: default-cluster
      cluster:
        certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJzeE9USXUKTVRZNExqRXVNVE00TFdOaFFERTJOalV6TVRZeE1UY3dIaGNOTWpJeE1EQTVNVEEwT0RNMldoY05Nak14TURBNQpNVEEwT0RNMldqQWpNU0V3SHdZRFZRUUREQmd4T1RJdU1UWTRMakV1TVRNNFFERTJOalV6TVRZeE1UY3dnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFl1RW5oa0V5aW1xcHAyb3RsTzlUWWhWdm8KTnRib2psSDhlYnlibW9md0hRMTlncTdiVjFHeThxT3U1QWY1K0JrQzNQcHVFdjZ3S3EvaUxTQVZzK3VlSEpncgpYcXZ4cElpazhNNWZFYVZYR2ppNnZybXVTVTdvL01vRmlwOXVkaGVHelRuLzdSc1N1bGgvVlFNTnRKTFZ4K2I5Cis1VWZuNC90dVVzQlRYNmtrWEc0amJocGxPTUF3UXhoeFV5YWpPdGxrS0JtcW1Tdzk2VThTZ011bEM3WGxhRjMKakNFN3lpZzRNZWFobEdsb2Z0WHMxQXJVQUtrUDRmY2krUjQrVDJQWC9HQ2RlekVtWTdIMDJlZXlSTHIvQ2o5ZQpPTEpOaENsQklHNWdNSlY0c283aE5tU0xNQThQaGh5Yyt3dGU4aXFWOEhjazlwTWt4U1RoelUvQlc2OTlBZ01CCkFBR2pjakJ3TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIMFN6L1N4Z3J3d1VFWmhVbTdhZitXUGFNanZNQm9HQTFVZApFUVFUTUJHQ0NXeHZZMkZzYUc5emRJY0V3S2dCaWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNSSzRBNkdCCitRS1Rvd2tFWU5HbEVDREQxWDEzZGZnM0swUFZsQ0dGM2NxdTcyTldWdHJVTCt1RExlaTdLVDdJY0NkdGRudWMKZ2JqNTVKSlUxOHBkQjQ2Nkd5TnAyTk0rRWFoc0R4SjVZUHdPOFZPdGtuOUE3TVNQVG9laHFnVzQ4SVJ4VVFkegpCKzdTdi85bTJuZ1BSamNQR2xVRG9GZ3J6STJYNU5nNjcweWZMVkdabmZzL1F5aWtJbUZqVThJS25ub2JORlkzCkRLZXJTY0VzR3hheDVNZmFpcS9KSmxYTXlrN3hBUitRbXNjT2xNanZZeGFZQXBpbGJYUXVwYUE5ODVQdFFLMXQKTEc2VGdFNEIxTlgrcTlld2dOZno4YUdyNTVoUW5DeFpPMk5hNGtuS1h1bFZRbVMwcDJ5L0NVbmJoS242K1lhVApSUmdMdWRnd0hXTldzQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJzeE9USXUKTVRZNExqRXVNVE00TFdOaFFERTJOalV6TVRZeE1UY3dIaGNOTWpJeE1EQTVNVEEwT0RNMldoY05Nak14TURBNQpNVEEwT0RNMldqQW1NU1F3SWdZRFZRUUREQnN4T1RJdU1UWTRMakV1TVRNNExXTmhRREUyTmpVek1UWXhNVGN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM0LzVhWisyWUhzeXNjcjhSSlFRWU4KSW9GdWRGdHZYa3pQQUJ0NVdoUVJqanNVK3BteUdkcVZ3cWVmVGhvenlnSHFtODU5NDVXUTA2YUIxNXg0a0ZsdQpFcXpJTVlKd3M0WlFOUUdmMVZxRWcvUkZKNGxIb3d5YnlRcVJrdWtleWNBdlYxNGRvZEo1NkhZWHdTaU1ZN1B1CnJuS3RDWlRjNDlUU0IzazVLbERkMFR4NDdGSjdTbzcyNCs1ZVZFUy9zVXdKUU9ydkR5eTBzS3RiZi92a2RXWHkKTEVpWWhKYk9WSi9GVUtyYXc3ZVFXc0ZtTndkWTF5MjlacFlJU09RLzJYbVVtRUhPcHVsWnJPSzFHbU9lU0ZVZApXZm9VQncrL0pwK0FNVkVzaW85T0NFNlJicFdOTjd6M3RPdGdDdmYrWXBmclpDMGlyRDdMRGVISE8zbXNYRVMvCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUjlFcy8wc1lLOE1GQkdZVkp1Mm4vbGoyakk3ekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYnByWQpCSHo0S08vRGpIUmMxcDdFblhhZEI4NzRLb1hTODk0ZHRaM3lIOUVxVXVuTWFYaW9SZlAvMlA1NjYvdS9Ub3R1CjVlanJ2Q25VbnVMb2ZFT1E1SUxjbzBXenFpQTJtTkp4OTNZK2tqYjV1VzNtc1pqdW1GcG9TWWJEQlhxeHduWVMKU21XVlJ6UndIM1JjVldycDludkVFM3lLTTJoMFJsY0N0ZFpBL1hQMWpiUmlmbGJFMWNpS1F3dFl1UGlIcUk3UgpCZnZHc2xucDFtS1J5N3YyY1RLSlBBMjBOYXNEMi8rWlBMVHRNcUllY0RQTHRPVjFkOTNvdGhKcXVYSDlOUTQwCk50QXJWQVd0NlU5THhuQkM0a3lXeThKR0JXUzQ5K01IeFpKV2R5aU82b2VFSlB5MFF0eXFsdkJrUnZpV010TFMKRDY4Zlcvb1BEbldPdXB6MGRnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        server: https://192.168.1.138:6443
    contexts:
    - name: default-context
      context:
        cluster: default-cluster
        namespace: default
        user: default-user
    current-context: default-context
    users:
    - name: default-user
      user:
        token: eyJhbGciOiJSUzI1NiIsImtpZCI6IlJOdkxMMF9HMDZfZ1Z0OVhUUGw4S2xZSHE0N0liX0VqUFNUOFF3VlNCaWMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9jbHVzdGVyTmFtZSI6InJvb3Q6dXNlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvbmFtZXNwYWNlIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrY3Atc3luY2VyLWtpbmQtMTBrNXBiY3YtdG9rZW4ta3c5bm0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoia2NwLXN5bmNlci1raW5kLTEwazVwYmN2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiN2M0ZmEwYTctMjg5MC00MWUwLThiMTQtOWM2YjQ2ZWNkZDI0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRlZmF1bHQ6a2NwLXN5bmNlci1raW5kLTEwazVwYmN2In0.KJhzCN26dVSuLOzPtVvYiJu8E0mIKVTKwagBK9byzS029HIHkBNWpICOHtvR3Ocfenq6KD0AntVUQGX8fgINmiMiQEILXentXg1XAMEzCoiIimCcCuwoyaUwDFbj5rA0yQwy2RrYh1MlWiF-476ReF6g-pUmlBVIo2npRfYi7CCXdbkH5jzJqRt78gXcbu2Ngx0D_u79fFW1TrPkWirDAgY5Ofi6C0slDCNQk1s_9ftX5mdY2ZiR2Ci-Ek8xKmbUbWEy0Y2sU69LvKb90Wzn6zT_eUCR6WK4-WUozlISfHmzky5P-M4pXuwnP09n0dahhYB8F2EGh94WGOe7lDt9tbzjt5DXU7uZyHd1j2TlpGmD8JXAunrxX6WJOjVuv05v0fT1rhoB5lpRsAuvK2WSFM6I05qGym6MUNf8X22xAzL1ncbFu00c3u5kT-2uG5zudqf3qqC0s7todae10IUKoS71RSlYlAFYaAWp1GY3UMEL3qjUKnDItJ972G2zQUycPbVn1F_YEbBbPTBLWUS0zxN14YhQh2YJ0z-C0q9vaPYIV7lNokzqJcE7iBsGNJTspZRpsQzqeoR5giKTf0nLKkx_v_BZb9a23HkXWyRNpMclTWJvYFADCoR1gcs-CWX3jWaQZtsTLAemPhxq_heNnPOmcZhzK8GQ17sBUyLIXcs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcp-syncer-kind-10k5pbcv
  namespace: kcp-syncer-kind-10k5pbcv
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kcp-syncer-kind-10k5pbcv
  template:
    metadata:
      labels:
        app: kcp-syncer-kind-10k5pbcv
    spec:
      containers:
      - name: kcp-syncer
        command:
        - /ko-app/syncer
        args:
        - --from-kubeconfig=/kcp/kubeconfig
        - --feature-gates=KCPSyncerTunnel=true
        - --sync-target-name=kind
        - --sync-target-uid=5ca0fc54-c28f-4153-aed5-99ca18e3d39e
        - --from-cluster=root:user
        - --resources=configmaps
        - --resources=deployments.apps
        - --resources=secrets
        - --resources=serviceaccounts
        - --qps=20
        - --burst=30
        image: ghcr.io/kcp-dev/kcp/syncer:main
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: kcp-config
          mountPath: /kcp/
          readOnly: true
      serviceAccountName: kcp-syncer-kind-10k5pbcv
      volumes:
        - name: kcp-config
          secret:
            secretName: kcp-syncer-kind-10k5pbcv
            optional: false
